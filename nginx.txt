LEMP Stack Setup - Ubuntu

=================================Install Nginx ==========================


sudo apt update
sudo apt install nginx
sudo ufw status

ufw enable

-> sudo ufw allow 'Nginx Full'
-> sudo ufw allow 'OpenSSH'

sudo ufw status - For see change rules
ufw reload
 
================================Install MySQL==============================


sudo apt install mysql-server
mysql> show databases;

sudo mysql_secure_installation 

mysql -u root -p
create database ssrPolytechnic;

CREATE USER 'ssr'@'localhost' IDENTIFIED WITH mysql_native_password BY 'nEs@r14@@##2024';
GRANT ALL ON ssrPolytechnic.* TO 'ssr'@'localhost';
flush privileges;

******* Change user Password ***************

SELECT User,Host FROM mysql.user WHERE User='ssr';
ALTER USER 'ssr'@'localhost' IDENTIFIED BY 'nEs@r14@@2024';
=========================Install PHP 7.4=================================

sudo apt update && sudo apt upgrade -y  

#Install dependencies 
	sudo apt install software-properties-common apt-transport-https -y 
 
#Add the PPA
	sudo add-apt-repository ppa:ondrej/php -y  

#Now to install PHP 7.4 FPM and its modules 

	sudo apt install php7.4-fpm php7.4-common php7.4-mysql php7.4-xml php7.4-xmlrpc php7.4-curl php7.4-gd php7.4-imagick php7.4-cli php7.4-dev php7.4-imap php7.4-mbstring php7.4-opcache php7.4-soap php7.4-zip php7.4-intl php7.4-bcmath

# Check Php 

php -v

=====================Install Git=============================
apt install git


=============================Install Composer==========================
1.	sudo apt install wget php7.4-cli php7.4-zip unzip
2.	php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
3.	HASH="$(wget -q -O - https://composer.github.io/installer.sig)"
4.	php -r "if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
5.	sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
6.	composer

==================== nginx Server Configaration =================

nano etc/nginx/sites-available/aaa.conf
sudo nano ssrpolytechnic


server {
    server_name ssrpolytechnic;
    root /var/www/html/project/public;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    index index.html index.htm index.php;

    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}

sudo ln -s /etc/nginx/sites-available/ssrpolytechnic /etc/nginx/sites-enabled

ls -l

------------ For Multi Site ----------------
sudo ln -s /etc/nginx/sites-available/ssrschool.edu.bd.conf /etc/nginx/sites-enabled/


sudo nginx -t
sudo systemctl restart nginx.service

===================== Laravel Folder Permission ==========================

sudo chown -R $USER:www-data storage

sudo chown -R $USER:www-data bootstrap/cache

sudo chmod -R 775 storage

sudo chmod -R 775 bootstrap/cache


============== SSL ====================

sudo ufw status

sudo apt install certbot python3-certbot-nginx

sudo certbot --nginx -d technoohut.com -d www.technoohut.com 

php artisan optimize

